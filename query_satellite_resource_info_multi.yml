---
- hosts: localhost
  connection: local
  gather_facts: false
  vars:
    login: &login
      server_url: "{{ lookup('env', 'SATELLITE_SERVER_URL') }}"
      username: "{{ lookup('env', 'SATELLITE_USERNAME') }}"
      password: "{{ lookup('env', 'SATELLITE_PASSWORD') }}"
      validate_certs: "{{ lookup('env', 'SATELLITE_VALIDATE_CERTS') }}"

  tasks:
    - name: List organization info
      redhat.satellite.resource_info:
        <<: *login
        resource: organizations
      register: organizations_resource_info_result

    - name: List location info
      redhat.satellite.resource_info:
        <<: *login
        resource: locations
      register: locations_resource_info_result

    - name: List capsule info
      redhat.satellite.resource_info:
        <<: *login
        resource: capsules
      register: capsules_resource_info_result

    - ansible.builtin.debug:
        var: resource_info_results
      vars:
        resource_info_results:  
          organizations: "{{ organizations_resource_info_result }}"
          locations: "{{ locations_resource_info_result }}"
          capsules: "{{ capsules_resource_info_result }}"

    - name: set the Organization Id from specific org selection via "{{ organization }}" variable and .Id
      ansible.builtin.set_fact: sat_org_id={{ organizations_resource_info_result | from_json | json_query(my_query) }}
      vars:
        my_query: "[?name=='{{ organization }}'].id"

    - name: What is the Org Id?
      ansible.builtin.debug:
        msg: "The Org Id selected is: {{ sat_org_id[0] }}"
...
