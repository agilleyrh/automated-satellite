---
- name: Create tempdir for package download
  ansible.builtin.tempfile:
    state: directory
  register: package_dl_tempdir

- name: Download centos-release package locally
  ansible.builtin.command: >-
    yumdownloader -v --destdir="{{ package_dl_tempdir.path }}" centos-release

- name: Remove centos-release package
  ansible.builtin.command: >-
    rpm -e --nodeps --justdb centos-release
  ignore_errors: true

- name: Set delay time via gather_facts
  ansible.builtin.set_fact:
    node_delay_time: "{{ inventory_hostname | regex_replace('^\\D+|\\..*', '') | int *30 }}"

- name: Include delay before starting analysis
  ansible.builtin.command: |
    python3 -c 'import time;time.sleep({{ node_delay_time }})'
  delegate_to: localhost
  connection: local

- name: Generate pre-conversion analysis report
  ansible.builtin.import_role:
    name: infra.convert2rhel.analysis

- name: Find all rpm files in tempdir "{{ package_dl_tempdir.path }}"
  ansible.builtin.find:
    paths: "{{ package_dl_tempdir.path }}"
    patterns: "*.rpm"
  register: centos_rpm_find

- name: Setting centos_rpm_list from centos_rpm_find
  ansible.builtin.set_fact:
    centos_rpm_list: "{{ centos_rpm_find.files | map(attribute='path') | list }}"

- name: Installing the rpm files
  ansible.builtin.yum:
    name: "{{ centos_rpm_list }}"
    state: present

- name: Remove tempdir
  ansible.builtin.file:
    path: "{{ package_dl_tempdir.path }}"
    state: absent

- name: Get paths to CentOS repos
  ansible.builtin.find:
    paths: /etc/yum.repos.d
    patterns: '*.repo'
  register: centos_repos

- name: Remove CentOS repos that were placed by infra.convert2rhel analysis role
  ansible.builtin.file:
    path: "{{ item.path }}"
    state: absent
  with_items: "{{ centos_repos.files | default([]) }}"
...
