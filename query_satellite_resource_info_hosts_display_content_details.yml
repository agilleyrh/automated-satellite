---
- name: Query Satellite content hosts detail and provide content facet details
  hosts: localhost
  connection: local
  gather_facts: false
  vars:
    login: &login
      server_url: "{{ lookup('env', 'SATELLITE_SERVER_URL') }}"
      username: "{{ lookup('env', 'SATELLITE_USERNAME') }}"
      password: "{{ lookup('env', 'SATELLITE_PASSWORD') }}"
      validate_certs: "{{ lookup('env', 'SATELLITE_VALIDATE_CERTS') }}"

  tasks:
    - name: Display ansible inventory group listing via dynamic_inventory_group variable
      ansible.builtin.debug:
        msg: "dynamic_inventory_group list: {{ groups[dynamic_inventory_group] }}"

    - name: Display value of 'ansible_limit' if set
      ansible.builtin.debug:
        var: ansible_limit | default ('')

    - name: Set content host loop list when ansible_limit is utilized
      when: ansible_limit in groups[dynamic_inventory_group]
      ansible.builtin.set_fact:
        content_host_loop_list: "{{ ansible_limit }}"

    - name: Set content host loop list when ansible_limit is not utilized
      when: ansible_limit == ''
      ansible.builtin.set_fact:
        content_host_loop_list: "{{ groups[dynamic_inventory_group] }}"

    - name: Retrieve Satellite organizations details
      redhat.satellite.resource_info:
        <<: *login
        resource: organizations
      register: organizations_resource_info_result

    - name: Display organizations_resource_info_result
      ansible.builtin.debug:
        msg: "{{ organizations_resource_info_result }}"

    - name: Retrieve Satellite content hosts details
      redhat.satellite.resource_info:
        <<: *login
        resource: hosts
      register: hosts_resource_info_result

    - name: Display hosts_resource_info_result
      ansible.builtin.debug:
        msg: "{{ hosts_resource_info_result }}"

    - name: Retrieve Satellite activation keys details
      redhat.satellite.resource_info:
        <<: *login
        resource: activation_keys
        organization: "{{ organizations_resource_info_result.resources | selectattr('label', 'search', org_id) | map(attribute='name') | first }}"
      register: activation_keys_resource_info_result

    - name: Display activation_keys_resource_info_result
      ansible.builtin.debug:
        msg: "{{ activation_keys_resource_info_result }}"

    - name: List host name plus content details
      ansible.builtin.debug:
        msg:
          - "node name: {{ item }}"
          - "content view: {{ hosts_resource_info_result.resources | selectattr('name', 'search', item) \
            | map(attribute='content_facet_attributes.content_view.name') | first }}"
          - "lifecycle environment: {{ hosts_resource_info_result.resources | selectattr('name', 'search', item) \
            | map(attribute='content_facet_attributes.lifecycle_environment.name') | first }}"
          - "associated activation key: {{ activation_keys_resource_info_result.resources | selectattr('name', 'search', hosts_resource_info_result.resources \
            | selectattr('name', 'search', item) | map(attribute='content_facet_attributes.lifecycle_environment.name') | first) | map(attribute='name') \
            | first }}"
      loop: "{{ content_host_loop_list }}"
      when: item in hosts_resource_info_result.resources | selectattr('name', 'search', 'node*') | map(attribute='name')
...
